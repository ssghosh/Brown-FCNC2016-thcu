import os,sys
from optparse import OptionParser
import math
import random

pwd=os.environ['PWD']
user=os.environ['USER']

# this is the mapping between decayQk and decayScript, which is the name of the 
# script generated by madspin_fcnc.py that will do the decays
qkToScript = {'top'     : 'go1.sh',
              'antitop' : 'go2.sh'}

# get options
parser = OptionParser(description='Submit condor jobs for FCNC signal sample production.')
parser.add_option('--numEvents',   action='store',  dest='numEvents',   default=50000,      help='Total number of events needed')
parser.add_option('--evPerJob',    action='store',  dest='evPerJob',    default=10000,      help='Number of events to generate per file')
parser.add_option('--decayMode',   action='store',  dest='decayMode',   default='eta_hut',  help='Which anomalous decay we want') # for a complete list of options, see https://twiki.cern.ch/twiki/bin/view/CMS/TopFCNCgenerationTTbar#1_Generating_LHE_with_top_decays
parser.add_option('--decayQk',     action='store',  dest='decayQk',     default='top',      help='Which quark (top or antitop) should undergo the decay') 
parser.add_option('--numCPU',      action='store',  dest='numCPU',      default=4,          help='How many CPUs to use') 
parser.add_option('--eosoutpath',  action='store',  dest='eosoutpath',  default='/',        help='where to store the LHEs, relative to your user directory on eos')
parser.add_option('--homeoutpath', action='store',  dest='homeoutpath', default='anafull',  help='where to store the condor outputs, relative to root')
parser.add_option('--wdecay',      action='store',  dest='w_decay',     default='leptonic', help='what the w from the non-anomalous top should decay to')
#parser.add_option('--anaSubLoc',  action='store', dest='anaSubLoc',  default="%s/anaSubstructure"%(pwd),            help='Location of anaSubstructure')
#parser.add_option('--fastJetLoc', action='store', dest='fastJetLoc', default="%s/fastjet/fastjet-install/"%(pwd),   help='Location of fastjet-install')
#parser.add_option('--cfg',        action='store', dest='cfg',        default="rhe",   help='Settings to pass to anaSubstructure')
#parser.add_option('--indir',      action='store', dest='indir',      default="",    help='Input LHE sample directory')

(options, args) = parser.parse_args()
print ">>> options.homeoutpath is " + options.homeoutpath

# check that we have a CMSSW tarball available
cmssw_loc = "root://cmseos.fnal.gov:///store/user/%s/FCNC/"%(user)
cmssw_vers = os.environ['CMSSW_VERSION']
if cmssw_vers == '' or 'CMSSW' not in cmssw_vers :
    print "Improper CMSSW environment. Exiting..."
    quit()

# try to create the output directory (this will simply fail with an error
# if outputdir already exists, so it won't overwrite anything)
os.system("xrdfs root://cmseos.fnal.gov mkdir -p /store/user/ssghosh/%s"%(options.eosoutpath))

# get ls of samples
#files = os.listdir("/eos/uscms/%s"%options.indir)

from math import ceil
nJobs=int(ceil(float(options.numEvents)/float(options.evPerJob)))
randomseed = int(random.uniform(1,1000000))

# prepare all configs
for i in range(nJobs):
    if not os.path.isdir(options.homeoutpath):
        os.system("mkdir -p "+options.homeoutpath)
    current_basename = 'FCNC_' + options.decayMode + '_' + options.decayQk + 'Decay_' + str(i)
    current_name = options.homeoutpath + current_basename 
    current_conf = open(current_name + '.condor', 'w')
    current_shel = open(current_name + '.sh', 'w')

    # write executable
    shel_tmpl = open('CondorShel.tmpl.sh')
    for line in shel_tmpl:
        if 'CMSSWLOC'      in line: 
            line = line.replace('CMSSWLOC',      cmssw_loc)
        if 'CMSSWVER'      in line: 
            line = line.replace('CMSSWVER',      cmssw_vers)
        if 'EVTS_PER_FILE' in line: 
            line = line.replace('EVTS_PER_FILE', options.evPerJob)
        if 'RANDOM_SEED'   in line: 
            line = line.replace('RANDOM_SEED',   str(randomseed))
        if 'NUM_CPUS'      in line: 
            line = line.replace('NUM_CPUS',      options.numCPU)
        if 'DECAY_MODE'    in line: 
            line = line.replace('DECAY_MODE',    options.decayMode)
        if 'W_DECAY'       in line:
            line = line.replace('W_DECAY',       options.w_decay)
        if 'DECAY_SCRIPT'  in line: 
            line = line.replace('DECAY_SCRIPT',  qkToScript[options.decayQk])
        if 'DECAYED_QUARK' in line: 
            line = line.replace('DECAYED_QUARK', options.decayQk)
        if 'USER'          in line: 
            line = line.replace('USER',          os.environ["USER"])
        if 'OUTPUT_PATH'    in line: 
            line = line.replace('OUTPUT_PATH',   options.homeoutpath)
        if 'EOS_OUTDIRPATH'    in line: 
            line = line.replace('EOS_OUTDIRPATH',options.eosoutpath)
        if 'SUFFIX'        in line: 
            line = line.replace('SUFFIX',        str(i))
        #if 'FILE'        in line: line = line.replace('FILE',        files[i].split('.')[0])
        #if 'NAME'        in line: line = line.replace('NAME',        files[i].split('.')[0] + "_%i"%j)
        #if 'ANASUBLOC'   in line: line = line.replace('ANASUBLOC',   options.anaSubLoc)
        #if 'FASTJETLOC'  in line: line = line.replace('FASTJETLOC',  options.fastJetLoc)
        #if 'MINEV'       in line: line = line.replace('MINEV',       minEv)
        #if 'MAXEV'       in line: line = line.replace('MAXEV',       maxEv)
        #if 'TAG'         in line: line = line.replace('TAG',         "%i"%j)
        #if 'CFG'         in line: line = line.replace('CFG',         options.cfg)

        current_shel.write(line)

    shel_tmpl.close()

    # write config
    conf_tmpl = open('CondorConf.tmpl.condor')
    for line in conf_tmpl:
        if 'OUTPUT_PATH' in line: 
            print ">>> line was " + line
            line = line.replace('OUTPUT_PATH', options.homeoutpath)
            print ">>> line is now " + line
        if 'NAME'        in line: line = line.replace('NAME',        current_basename)
        if 'USER'        in line: line = line.replace('USER',        os.environ["USER"])

        current_conf.write(line)

    conf_tmpl.close()

    current_conf.close()
    current_shel.close()

# run jobs
for i in range(nJobs):
    current_name = options.homeoutpath+'/FCNC_' + options.decayMode + '_' + options.decayQk + 'Decay_' + str(i)
    #os.system('mkdir -p .' + options.outdirpath)
    #os.chdir('.' + options.outdirpath)
    print "about to submit job"
    os.system('condor_submit ' + current_name + '.condor')
